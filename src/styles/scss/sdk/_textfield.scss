/**
 * sdk Textfield Component
 */

$xFormLabelLineHeight: floor($sdk-label-font-size * 1.25);



// ============================================================================
// TEXTFIELD
// ============================================================================

.sdk-textfield {
  display: block;
  padding-top: $xFormLabelLineHeight;
  margin-bottom: $sdk-form-group-margin-bottom;
  position: relative;

  > label {
    @include form-label();
  }

  > textarea {
    padding-top: 5px;
  }

  > input,
  > textarea {
    &:focus ~ label {
      color: $sdk-input-border-color-focus;
    }
  }
}

.sdk-textfield--float-label {
  > label {
    // Layout
    position: absolute;
    transform: translate(0px, $xFormLabelLineHeight);

    // Typography
    font-size: $sdk-input-font-size;
    line-height: $sdk-input-height;
    color: $sdk-input-placeholder-color;

    // Overflow policy
    text-overflow: clip;

    // Cursor
    cursor: text;  // for ie10
    pointer-events: none;
  }

  > input,
  > textarea {
    &:focus ~ label {
      transform: translate(0px, 0px);
      font-size: $sdk-label-font-size;
      line-height: $xFormLabelLineHeight;
      text-overflow: ellipsis;
    }

    &:not(:focus) {
      &.sdk--is-not-empty,
      &[value]:not([value=""]):not(.sdk--is-empty):not(.sdk--is-not-empty),
      &:not(:empty):not(.sdk--is-empty):not(.sdk--is-not-empty) {
        ~ label {
          color: $sdk-label-font-color;
          font-size: $sdk-label-font-size;
          line-height: $xFormLabelLineHeight;
          transform: translate(0px, 0px);
          text-overflow: ellipsis;
        }
      }
    }
  }
}

.sdk-textfield--wrap-label {
  display: table;
  width: 100%;
  padding-top: 0px;

  &:not(.sdk-textfield--float-label) > label {
    display: table-header-group;
    position: static;
    white-space: normal;
    overflow-x: visible;
  }
}

.sdk-textfield > input,
.sdk-textfield > textarea {
  box-sizing: border-box;
  display: block;
  background-color: $sdk-input-bg-color;
  color: $sdk-input-font-color;
  border: none;
  border-bottom: 1px solid $sdk-input-border-color;
  outline: none;
  width: 100%;
  padding: 0;
  box-shadow: none;
  border-radius: 0px;

  // Typography
  font-size: $sdk-input-font-size;
  font-family: inherit;
  line-height: inherit; 

  // Bugfix for firefox-android
  background-image: none;

  &:focus {
    border-color: $sdk-input-border-color-focus;
    border-width: 2px;
  }

  &:disabled,
  &:read-only {
    cursor: $sdk-cursor-disabled;
    background-color: $sdk-input-bg-color-disabled;
    opacity: 1;  // iOS fix for unreadable disabled content
  }

  &::placeholder {
    color: $sdk-input-placeholder-color;
    opacity: 1;  // Normalize firefox
  }
}

.sdk-textfield > input {
  height: $sdk-input-height;

  // Compensate for height change on focus
  &:focus {
    height: $sdk-input-height + 1px;
    margin-bottom: -1px;
  }
}

.sdk-textfield > textarea {
  min-height: $sdk-textarea-height;

  // Compensate for height change on focus
  &[rows]:not([rows="2"]):focus {
    margin-bottom: -1px;
  }
}

.sdk-textfield > input:focus {
  // Compensate for height change on focus
  height: $sdk-input-height + 1px;
  margin-bottom: -1px;
}




// ============================================================================
// FORM VALIDATION
// ============================================================================

.sdk-textfield > input:invalid:not(:focus),
.sdk-textfield > textarea:invalid:not(:focus),
.sdk-textfield > input:not(:focus).sdk--is-invalid,
.sdk-textfield > textarea:not(:focus).sdk--is-invalid {
  &:not(:required),
  &:required.sdk--is-not-empty,
  &:required.sdk--is-empty.sdk--is-touched,
  &:required[value]:not([value=""]):not(.sdk--is-empty):not(.sdk--is-not-empty),
  &:required:not(:empty):not(.sdk--is-empty):not(.sdk--is-not-empty) {
    border-color: $sdk-danger-color;
    border-width: 2px;
  }
}

// Treat <input>'s different from <textarea>'s
.sdk-textfield > input:invalid:not(:focus),
.sdk-textfield > input:not(:focus).sdk--is-invalid {
  &:not(:required),
  &:required.sdk--is-not-empty,
  &:required.sdk--is-empty.sdk--is-touched,
  &:required[value]:not([value=""]):not(.sdk--is-empty):not(.sdk--is-not-empty),
  &:required:not(:empty):not(.sdk--is-empty):not(.sdk--is-not-empty) {
    height: $sdk-input-height + 1px;
    margin-bottom: -1px;
  }
}

// set label color for invalid inputs
.sdk-textfield {
  // has floating label
  &.sdk-textfield--float-label {
    > input:invalid:not(:focus),
    > textarea:invalid:not(:focus) {
      &:not(:required),
      &:required.sdk--is-not-empty,
      &:required[value]:not([value=""]):not(.sdk--is-empty):not(.sdk--is-not-empty),
      &:required:not(:empty):not(.sdk--is-empty):not(.sdk--is-not-empty) {
        ~ label {
          color: $sdk-danger-color;
        }
      }
    }
  }

  // doesn't have floating label
  &:not(.sdk-textfield--float-label) {
    > input:invalid:not(:focus),
    > textarea:invalid:not(:focus) {
      &:not(:required),
      &:required.sdk--is-empty.sdk--is-touched,
      &:required.sdk--is-not-empty {
        ~ label {
          color: $sdk-danger-color;
        }
      }
    }
  }
}


// set label color for force class (sdk--is-invalid)
.sdk-textfield {
  // has floating label
  &.sdk-textfield--float-label {
    > .sdk--is-invalid.sdk--is-not-empty:not(:focus) ~ label {
      color: $sdk-danger-color;
    }
  }

  // doesn't have floating label
  &:not(.sdk-textfield--float-label) {
    > .sdk--is-invalid:not(:focus) ~ label {
      color: $sdk-danger-color;
    }
  }
}
